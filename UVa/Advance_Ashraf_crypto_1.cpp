#include<iostream>
#include<string>

using namespace std;

int N, M, data1[50][100], TC, code[8], num, sum, ans;
int i, j, k, last_index;
char data[51][101];

void inCase()
{
    cin>>N>>M;
    for(i=0; i<N; i++)
       cin>>data[i];
}

void codeCheck()
{
    if(data[i][j]=='0' && data[i][j+1]=='0' && data[i][j+2]=='0' && data[i][j+3]=='1' && data[i][j+4]=='1' && data[i][j+5]=='0') num=0;
    if(data[i][j]=='0' && data[i][j+1]=='0' && data[i][j+2]=='1' && data[i][j+3]=='1' && data[i][j+4]=='0' && data[i][j+5]=='0') num=1;
    if(data[i][j]=='0' && data[i][j+1]=='0' && data[i][j+2]=='1' && data[i][j+3]=='0' && data[i][j+4]=='0' && data[i][j+5]=='1') num=2;
    if(data[i][j]=='0' && data[i][j+1]=='1' && data[i][j+2]=='1' && data[i][j+3]=='1' && data[i][j+4]=='1' && data[i][j+5]=='0') num=3;
    if(data[i][j]=='1' && data[i][j+1]=='1' && data[i][j+2]=='0' && data[i][j+3]=='0' && data[i][j+4]=='0' && data[i][j+5]=='1') num=4;
    if(data[i][j]=='0' && data[i][j+1]=='1' && data[i][j+2]=='1' && data[i][j+3]=='0' && data[i][j+4]=='0' && data[i][j+5]=='0') num=5;
    if(data[i][j]=='0' && data[i][j+1]=='1' && data[i][j+2]=='0' && data[i][j+3]=='1' && data[i][j+4]=='1' && data[i][j+5]=='1') num=6;
    if(data[i][j]=='0' && data[i][j+1]=='1' && data[i][j+2]=='1' && data[i][j+3]=='1' && data[i][j+4]=='0' && data[i][j+5]=='1') num=7;
    if(data[i][j]=='0' && data[i][j+1]=='1' && data[i][j+2]=='1' && data[i][j+3]=='0' && data[i][j+4]=='1' && data[i][j+5]=='1') num=8;
    if(data[i][j]=='0' && data[i][j+1]=='0' && data[i][j+2]=='0' && data[i][j+3]=='1' && data[i][j+4]=='0' && data[i][j+5]=='1') num=9;
}

void getVcode()
{
    sum=0;
    for(i=1; i<=8; i++)
        sum=sum+code[i];
    if((sum%10)==0) ans=sum;
    else ans=0;


}

void solvCase()
{
    last_index=-1;
    for( i=0; i<N ;i++)
    {
        for( j = (M-1); j>=0; j--)
        {
            if(data[i][j]=='1')
			{
				last_index=j;
				break;
			}
        }
        if(last_index>-1)
        break;
    }
    cout<<"\n"<<last_index<<endl;

    for(j=last_index-55, k=1; (j<=last_index && k<=8); j+=7, k++)
    {
        codeCheck();
        code[k]=num;
        cout<<num;
    }
    getVcode();
}


int main()
{
    cin>>TC;
    for(i=1; i<=TC; TC++)
    {
        ans=0;
        inCase();
        solvCase();
        cout<<"#"<<TC<<" "<<ans;
    }
	system("pause");
    return 0;
}

/*



1
11 70
00000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000
00000001100101000110100011010111101101110010011001001101110110000000000
00000001100101000110100011010111101101110010011001001101110110000000000
00000001100101000110100011010111101101110010011001001101110110000000000
00000001100101000110100011010111101101110010011001001101110110000000000
00000001100101000110100011010111101101110010011001001101110110000000000
00000001100101000110100011010111101101110010011001001101110110000000000
00000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000

1
16 80
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000011101101100010111011011000101100010001101001001101110110000000000
00000000000000011101101100010111011011000101100010001101001001101110110000000000
00000000000000011101101100010111011011000101100010001101001001101110110000000000
00000000000000011101101100010111011011000101100010001101001001101110110000000000
00000000000000011101101100010111011011000101100010001101001001101110110000000000
00000000000000011101101100010111011011000101100010001101001001101110110000000000
00000000000000011101101100010111011011000101100010001101001001101110110000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000






*/
